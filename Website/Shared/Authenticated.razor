@using System.Web
@using Website.Data
@inject NavigationManager NavManager
@inject IvaoLoginService LoginSrv

@if (authenticatedUser is not null && ChildContent is not null)
{
    @ChildContent(authenticatedUser)
}

@code {
    [Parameter]
    public RenderFragment<IvaoLoginData>? ChildContent { get; set; }

    IvaoLoginData? authenticatedUser = null;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
            return;

        string url = NavManager.Uri;
        if (!url.Contains("token="))
        {
            authenticatedUser = await LoginSrv.GetAuthenticatedUserAsync();

            if (authenticatedUser is null)
                NavManager.NavigateTo($"https://login.ivao.aero/index.php?url=https%3A%2F%2Fxa.ivao.aero%2Flogin_redirect.php%3Fredir_to%3D{Uri.EscapeDataString(Uri.EscapeDataString(url))}");

            await InvokeAsync(StateHasChanged);
            return;
        }

        string token = url.Split("token=")[1];

        await LoginSrv.RegisterUserAsync(token);
        authenticatedUser = await LoginSrv.GetAuthenticatedUserAsync();

        NavManager.NavigateTo(new Uri(url).GetLeftPart(UriPartial.Path));
        await InvokeAsync(StateHasChanged);
    }
}
